name: Deploy to ECS

on:
  push:
    branches: [ master ]

env:
  AWS_REGION: us-east-1
  ECS_SERVICE: quasar-service
  ECS_CLUSTER: quasar-cluster
  ECR_REPOSITORY_NAME: strapi-app
  IMAGE_TAG: latest
  ECR_IMAGE_URI: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/docker-strapi-quasar

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      uses: aws-actions/amazon-ecr-login@v1

    - name: Create ECR repository if it doesn't exist
      run: |
        aws ecr describe-repositories --repository-names $ECR_REPOSITORY_NAME || \
        aws ecr create-repository --repository-name $ECR_REPOSITORY_NAME

    - name: Build Docker image
      working-directory: ./docker-strapi
      run: |
        docker build -t $ECR_REPOSITORY_NAME:$IMAGE_TAG .
        docker tag $ECR_REPOSITORY_NAME:$IMAGE_TAG $ECR_IMAGE_URI:$IMAGE_TAG

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: ${{ env.ECR_IMAGE_URI }}:${{ env.IMAGE_TAG }}
        format: 'json'
        output: 'trivy-results.json'

    - name: Push Trivy scan results
      uses: actions/upload-artifact@v4
      with:
        name: trivy-results
        path: trivy-results.json

    - name: Push Docker image to ECR
      run: |
        docker push $ECR_IMAGE_URI:$IMAGE_TAG

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3

    - name: Terraform Init
      working-directory: ./tf
      run: terraform init

    - name: Terraform Apply
      working-directory: ./tf
      run: terraform apply --auto-approve
